package com.seat_booking_customers;

import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;


public class Customer {
	public String customerName;
	public long mobileno;
	public String address;
	public int seat_no;
	public int getSeat_no() {
		return seat_no;
	}
	public void setSeat_no(int seat_no) {
		this.seat_no = seat_no;
	}
	public String getCustomerName() {
		return customerName;
	}
	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}
	public long getMobileno() {
		return mobileno;
	}
	public void setMobileno(long mobileno) {
		this.mobileno = mobileno;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	@Override
	public String toString() {
		return "Customer [customerName=" + customerName + ", mobileno=" + mobileno + ", address=" + address
				+ ", seat_no=" + seat_no + "]";
	}
	public Customer(String customerName, long mobileno, String address,int seat_no) {
		super();
		this.customerName = customerName;
		this.mobileno = mobileno;
		this.address = address;
		this.seat_no=seat_no;
	}
	//customer details method
		@Override
		public void getcustomer_details() {
			Scanner sc=new Scanner(System.in);
			System.out.println("Enter customer name");
			String customer_name=sc.next();
			System.out.println("enter customer mobile number");
			long mobile_no=sc.nextLong();
			System.out.println("enter customer address");
			String address=sc.next();
			System.out.println("enter seat number");
			int seat_no=sc.nextInt();
			Collections.sort(cus,new SeatId());
			Customer cu=new Customer(null,0,null,seat_no);
			int index=Collections.binarySearch(cus,cu,new SeatId());
			if(index<0)
				cus.add(new Customer(customer_name,mobile_no,address,seat_no));
				
			else {
					System.out.println("seat already booked");
					System.out.println("please enter anthoer seat number");
					seat_no=sc.nextInt();
					cus.add(new Customer(customer_name,mobile_no,address,seat_no));
			}
		}
}
//seat id sorting 
class SeatId implements Comparator<Customer>{

	@Override
	public int compare(Customer o1, Customer o2) {
		if(o1.seat_no<o2.seat_no)
			return -1;
		else if(o1.seat_no>o2.seat_no)
			return 1;
		else
			return 0;
	}
	
}